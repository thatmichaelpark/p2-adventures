===========================================================================
               RELEASE NOTES FOR P2 DVI/VGA/TV DRIVER
===========================================================================

RELEASE 0.91b     2 JULY 2020
----------------------------
Bug fix only, no new features

RELEASE 0.9b     1 JULY 2020
----------------------------
Bug fix only, no new features

RELEASE 0.8b    21 NOVEMBER 2019                                   
--------------------------------

This is the first BETA release of this driver software intended to be made
available for a range of people to test out and find any remaining issues
to be resolved, before the official release.

It has all features now fully implemented, significantly tested and working.

There may still be some remaining issues or regressions that crept in at the 
last minute.

In this package you will find the driver code and some demonstration files,
along with the documentation of driver features.  The SPIN2 API is not
documented yet but should be reasonably self explanatory with the demos
showing how some of it can be used.

HARDWARE REQUIREMENTS:
----------------------

This requires a revB P2 based P2-EVAL board.  It should also work on other 
P2 boards in development with the revB such as the upcoming P2D2.

KNOWN ISSUES:
-------------

In CVBS output, the screen flickers, and the parameters are not yet optimal.
In Composite this also happens but to a lesser degree.

PAL is not truly realized and for now uses the NTSC colourburst vector and 
does not alternate on each line yet.  These issues are planned to be fixed 
in time.

PERFORMANCE ISSUES:
-------------------

If you try to enable text regions when the P2 clock is too low for the pixel
clock output you can experience loss of display.  The code is still working 
but display devices will lose synchronization due to excessive delay and
jitter they experience with the sync pulses.

To use the inbuilt text rendered for text regions you will need a 5x clock 
divider or higher.  This means there should be >=5 P2 system clocks per pixel.

To do graphics modes, you may only need to run at 2x pixel clock if pixel 
doubling is not enabled, enabling doubling will require higher clock dividers.

Enabling the mouse, 256 colour palettes and small borders also increase the 
load.  A very large side border can also eat into the clock cycle budget.  

If you see failures, try increasing the clock divider, reducing the resolution
or disabling these features to see if it is remedied.  If you get no output
start with simple undoubled graphics modes and work upwards from there.

Remember DVI always requires a 10x pixel clock divider.

DRIVER API:
-----------

The SPIN2 based API provided works in FASTSPIN (tested with version 4.0.3 of
FlexGui).  The core code is PASM2 based and this component could be extracted
from the file and used in a standalone environment using tools such as P2ASM.
In fact this portion began development using P2ASM, and the Spin layer was
added more recently.  As a result this portion is in more of a state of flux,
and is not yet anywhere near an optimal API, but should be good enough for some
simple testing/experiments etc.

UNTESTED FEATURES:
------------------

- External memory access, sprite mode access (requires further COG development)

- Some unaligned transfers have not been tested, corner cases of wrap around etc.

- Transparent mode (1x clock ratio) performance has not been tested under many
situations involving 256 palettes or mouse sprites and borders etc.

VIDEO MODE PINS:
---------------

In Composite (CVBS) output modes, any P2 pin can be the video output.

In S-Video output modes, the first 2 pins of a 4 pin group are Y/C respectively
in increasing order.  If composite is also enabled then the third pin gets that
video output.
PinBase   - Y output
PinBase+1 - C output
PinBase+2 - CVBS output
PinBase+3 - unused, not enabled
 
In Component output mode the signal order is in this sequence so cables should
be plugged in accordingly:
PinBase - unused, not enabled
PinBase+1 - Pb
PinBase+2 - Y
PinBase+3 - Pr

The pin combinations can be extended later to support other options.

DVI signal quality output right now can be problematic.  Chip's demos have 
used a combination of different ideas with signal drive levels, with people
getting mixed results on different monitors.

I have been successful with a full 3.3V drive output on a Dell LCD monitor,
but this will violate the DVI spec.  You may like to experiment if the 
default 1.5kohm setting does not work but you may risk your equipment by doing
so.  I am not responsible if you do damage to anything, this is experimental
grade stuff at this point.  YOU HAVE BEEN WARNED!

The default is the 1.5k drive setting.  I see some pixel errors on my monitor
with this setup.

VGA and TV outputs do not have this problem.  The 2V 75 ohm DACs match the
TV/monitor's requirements nicely.  VGA also allow much higher resolutions
all the way to 1920x1200 (no text).  In graphics modes, it might be possible
to hit 2048x1536 at 50Hz.

FONTS:
------

Font provided in the demonstrations were obtained from int10h.org, with
all credits going to the original authors.

DISCLAIMER:
-----------

Note that this software will overclock your P2 if you enable anything other
than simple SDTV modes.  HDTV modes can overclock as high as 350MHz.  If 
you don't wish to do this, don't use those modes, or be sure to define your 
own custom clock timings that don't overclock the P2 when using simple
transparent pass through modes.


LICENSE
-------
Copyright 2019 Roger Loh

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in 
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR 
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE 
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN 
THE SOFTWARE.

